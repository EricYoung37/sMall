spring.application.name=payment-service

spring.config.import=optional:file:.env[.properties]

# SPRING_PROFILES_ACTIVE only set by docker-compose.yml
# Fall back to local properties if running on host
spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}

server.port=${PAYMENT_SERVICE_PORT}

# MySQL URL depends on the profile
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PWD}

spring.jpa.hibernate.ddl-auto=create-drop

jwt.secret=${JWT_SECRET}

internal.auth.token=${INTERNAL_AUTH_TOKEN}
internal.auth.header=${INTERNAL_AUTH_HEADER}

# Eureka URL depends on the profile
eureka.instance.prefer-ip-address=true

# Kafka host depends on the profile

# Producer config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.retries=3
spring.kafka.producer.delivery.timeout.ms=10000

# Consumer config
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Optional producer/consumer tuning
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.acks=all