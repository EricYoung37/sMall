spring.application.name=order-service

spring.config.import=optional:file:.env[.properties]

server.port=${ORDER_SERVICE_PORT}

jwt.secret=${JWT_SECRET}

internal.auth.token=${INTERNAL_AUTH_TOKEN}
internal.auth.header=${INTERNAL_AUTH_HEADER}

eureka.client.service-url.defaultZone=http://localhost:${EUREKA_PORT}/eureka
eureka.instance.prefer-ip-address=true

spring.cassandra.contact-points=127.0.0.1:${CASSANDRA_PORT}
spring.cassandra.local-datacenter=datacenter1
spring.cassandra.username=${CASSANDRA_USER}
spring.cassandra.password=${CASSANDRA_PWD}
spring.cassandra.keyspace-name=${CASSANDRA_KEYSPACE}
spring.cassandra.schema-action=create-if-not-exists

spring.kafka.bootstrap-servers=localhost:${KAFKA_PORT}

# Producer config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.retries=3
spring.kafka.producer.delivery.timeout.ms=10000

# Consumer config
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Optional producer/consumer tuning
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.acks=all