services:

  cassandra:
    build: ./cassandra
    container_name: sMall_cassandra
    ports:
      - "${CASSANDRA_PORT}:${CASSANDRA_PORT}"
    env_file:
      - .env
    volumes:
      - ./cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml # override
  #      - cassandra-data:/var/lib/cassandra

  mysql:
    image: mysql:8.0
    container_name: sMall_mysql
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PWD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PWD}
      MYSQL_DATABASE: ${MYSQL_DB}
    restart: unless-stopped
  #    volumes:
  #      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: sMall_redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    restart: unless-stopped
    command: [ "redis-server", "--requirepass", "${REDIS_PWD}" ]
  #    volumes:
  #      - redis-data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: sMall_zookeeper
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: sMall_kafka
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_EXTERNAL_PORT}:${KAFKA_EXTERNAL_PORT}"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:${KAFKA_INTERNAL_PORT},EXTERNAL://0.0.0.0:${KAFKA_EXTERNAL_PORT}
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:${KAFKA_INTERNAL_PORT},EXTERNAL://localhost:${KAFKA_EXTERNAL_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: sMall_kafka_ui
    ports:
      - "${KAFKA_UI_PORT}:${KAFKA_UI_PORT}"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:${KAFKA_INTERNAL_PORT}
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:${ZOOKEEPER_PORT}
    depends_on:
      - kafka
      - zookeeper

#volumes:
#  redis-data:
#  cassandra-data:
#  mysql_data: